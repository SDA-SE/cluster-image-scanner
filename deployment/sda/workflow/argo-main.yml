apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: orchestration-
spec:
  artifactRepositoryRef:
    configMap: artifact-repositories
    key: default-v1
  entrypoint: main
  templates:
    - name: main
      steps:
        - - name: fetch-image-list
            template: fetch-image-list
        - - name: run-subflow
            template: subflow
            arguments:
              parameters:
              - name: REGISTRY_SECRET
                value: registry-sda-default
              - name: DEPENDENCY_SCAN_CM
                value: dependency-check-db
              - name: DEFECTDOJO_CM
                value: defectdojo-test
              - name: DEFECTDOJO_SECRETS
                value: defectdojo-test
              - name: image
                value: "{{ item.image }}"
              - name: image_id
                value: "{{ item.image_id }}"
              - name: slack
                value: "{{ item.slack }}"
              - name: skip
                value: "{{ item.skip }}"
              - name: team
                value: "{{ item.team }}"
              - name: namespace
                value: "{{ item.namespace }}"
              - name: container_running_as
                value: "{{ item.container_running_as }}"
              - name: environment
                value: "{{ item.environment }}"
              - name: branch
                value: "{{ item.branch }}"
            withParam: "{{ steps.fetch-image-list.outputs.artifacts.image-list-merged }}"
            when: "{{ item.skip }} != true"
      #parallelism: 10


    - name: fetch-image-list
      outputs:
        artifacts:
        - name: image-lists
          path: /clusterscanner/out
        - name: image-list-merged
          path: /clusterscanner/out/merged/merged.json
      volumes:
        - name: github
          secret:
            secretName: github-sda
        - name: tmp
          emptyDir: {}
      script:
        image: quay.io/sdase/clusterscanner-base:1
        imagePullPolicy: Always
        volumeMounts:
          - name: github
            mountPath: /clusterscanner/github/github_private_key.pem
            subPath: github_private_key.pem
          - name: tmp
            mountPath: /clusterscanner/out
        env:
          - name: GITHUB_KEY_FILE_PATH
            value: /clusterscanner/github/github_private_key.pem
        envFrom:
          - secretRef:
              name: "github-sda"
        command: [/bin/bash]
        workingDir: /clusterscanner
        source: |
          source auth.bash
          sp_authorize
          sp_getfile https://api.github.com/repos/SDA-SE/cluster-scan-images-sdadev/contents/output.json /clusterscanner/out/sdadev.json
          mkdir -p /clusterscanner/out/merged
          jq -s 'flatten' /clusterscanner/out/*.json > /merged/merged.json


    - name: subflow
      inputs:
        parameters:
        - name: REGISTRY_SECRET
        - name: DEPENDENCY_SCAN_CM
        - name: DEFECTDOJO_CM
        - name: DEFECTDOJO_SECRETS
        - name: image
        - name: image_id
        - name: skip
        - name: environment
        - name: namespace
        - name: branch
        - name: team
        - name: slack
        - name: container_running_as
      resource:
        action: create
        manifest: |
          apiVersion: argoproj.io/v1alpha1
          kind: Workflow
          metadata:
            generateName: scanjob-{{ inputs.parameters.environment }}-{{ inputs.parameters.namespace }}-{{ inputs.parameters.team }}-
          spec:
            arguments:
              parameters:
                - name: REGISTRY_SECRET
                  value: {{ inputs.parameters.REGISTRY_SECRET }}
                - name: DEPENDENCY_SCAN_CM
                  value: {{ inputs.parameters.DEPENDENCY_SCAN_CM }}
                - name: DEFECTDOJO_CM
                  value: {{ inputs.parameters.DEFECTDOJO_CM }}
                - name: DEFECTDOJO_SECRETS
                  value: {{ inputs.parameters.DEFECTDOJO_SECRETS }}
                - name: SCAN_ID
                  value: "{{ workflow.creationTimestamp.Y }}{{ workflow.creationTimestamp.m }}{{ workflow.creationTimestamp.d }}_{{ workflow.creationTimestamp.H }}{{ workflow.creationTimestamp.M }}{{ workflow.creationTimestamp.S }}"
                - name: team
                  value: {{ inputs.parameters.team }}
                - name: environment
                  value: {{ inputs.parameters.environment }}
                - name: namespace
                  value: {{ inputs.parameters.namespace }}
                - name: branch
                  value: {{ inputs.parameters.branch }}
                - name: image
                  value: {{ inputs.parameters.image }}
                - name: image_id
                  value: {{ inputs.parameters.image_id }}
                - name: slack
                  value: "{{ inputs.parameters.slack }}"
            workflowTemplateRef:
              name: scan-image-job
        successCondition: status.phase == Succeeded
        failureCondition: status.phase in (Failed, Error)