apiVersion: argoproj.io/v1alpha1
kind: CronWorkflow
metadata:
  name: cleanup-pvc-wf
  namespace: clusterscanner
spec:
  schedule: "56 7 * * *"
  concurrencyPolicy: "Forbid"
  startingDeadlineSeconds: 0
  workflowSpec:
    entrypoint: pvc-cleanup
    templates:
      - name: pvc-cleanup
        volumes:
          - name: scandata
            persistentVolumeClaim:
              claimName: clusterscanner-scandata
          - name: images
            persistentVolumeClaim:
              claimName: clusterscanner-images
        script:
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          image: quay.io/sdase/clusterscanner-base:2
          volumeMounts:
            - name: scandata
              mountPath: /clusterscanner/data
            - name: images
              mountPath: /clusterscanner/images
          imagePullPolicy: Always
          command: [bash]
          env:
            - name: MAX_DAYS
              value: "7"
          source: |
            set -e
            /usr/bin/whoami
            du -sh /clusterscanner/images/
            du -sh /clusterscanner/data/

            for cleanupPath in $(find /clusterscanner/images/ -maxdepth 2 -mindepth 2 -mtime +${MAX_DAYS}); do
                echo "Removing ${cleanupPath}"
                rm -Rf ${cleanupPath} || true # folders have owner rights issues
            done
            find /clusterscanner/images/ -maxdepth 2 -empty -type d -delete

            for cleanupPath in $(find /clusterscanner/data/ -name *.json -mtime +${MAX_DAYS}); do
                echo "Removing ${cleanupPath}"
                rm -Rf ${cleanupPath} || true # folders have owner rights issues
            done
            find /clusterscanner/data/ -empty -type d -delete

            echo "done"
            exit 0
