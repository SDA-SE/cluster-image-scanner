#!/bin/bash

set -e

# shellcheck source=../../base/scan-common.bash
source ./scan-common.bash

# Initialize variables with default values
MAX_FILESIZE="4000M"
IMAGE_BY_HASH=""
IMAGE_TAR_PATH=""
ARTIFACTS_PATH=""

while getopts "i:t:s:a:" opt; do
  case $opt in
    i)
      IMAGE_BY_HASH="$OPTARG"
      ;;
    t)
      IMAGE_TAR_PATH="$OPTARG"
      ;;
    s)
      MAX_FILESIZE="$OPTARG"
      ;;
    a)
      ARTIFACTS_PATH="$OPTARG"
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

if [[ -z "$IMAGE_BY_HASH" || -z "$IMAGE_TAR_PATH" || -z "$ARTIFACTS_PATH" ]]; then
  echo "Error: one or more parameters is empty" >&2
  exit 1
fi

>&3 echo "i: $IMAGE_BY_HASH, t: $IMAGE_TAR_PATH, s: $MAX_FILESIZE, a: $ARTIFACTS_PATH"

scan_result_pre

echo "Scanning ${IMAGE_BY_HASH} ${IMAGE} in ${IMAGE_TAR_PATH}"
LOGFILE="${ARTIFACTS_PATH}/clamav-$(date +%s).log"

set +e
clamscan --max-filesize="${MAX_FILESIZE}" --max-scansize="${MAX_FILESIZE}" --infected --recursive --log="${LOGFILE}" "${IMAGE_TAR_PATH}"
CLAM_RETURN_CODE=$?
set -e

if [ ${CLAM_RETURN_CODE} -eq 0 ]; then
  echo "JSON_RESULT: ${JSON_RESULT}"
  JSON_RESULT=$(echo "${JSON_RESULT}" | jq -Sc ". += {\"status\": \"completed\", \"finding\": false}")
elif [ ${CLAM_RETURN_CODE} -eq 1 ]; then
  findings=$(cat "${LOGFILE}" | grep FOUND | sed "s#${IMAGE_TAR_PATH}##")
  infoText="Potential malware found in ${IMAGE_BY_HASH}\nPlease take a look at ${findings}"
  echo "${infoText}"
  JSON_RESULT=$(echo "${JSON_RESULT}" | jq -Sc ". += {\"status\": \"completed\", \"finding\": true, \"infoText\": \"${infoText}\"}")

  cp /clusterscanner/malware.json "${ARTIFACTS_PATH}/malware.json"
  sanitizedInfoText=$(echo "${infoText}" | tr -d '|')


  json=$(add_json_field "infoText" "$sanitizedInfoText" <<< "${ARTIFACTS_PATH}/malware.json" "description")
  cat "$json" > "${ARTIFACTS_PATH}/malware.json"
  #echo $(jq \
  #  --arg infoText "${sanitizedInfoText}" \
  #  '.findings[].description.infoText = $infoText' \
  #  "${ARTIFACTS_PATH}/malware.json") > "${ARTIFACTS_PATH}/malware.json"
else
  infoText="Malware exited with the unexpected code ${CLAM_RETURN_CODE} in ${IMAGE_BY_HASH}, log: ${LOGFILE}"
  echo "${infoText}"
  cat "${LOGFILE}"
  JSON_RESULT=$(echo "${JSON_RESULT}" | jq -Sc ". += {\"status\": \"failed\", \"infoText\": \"${infoText}\"}")
fi

scan_result_post

#if [ ${CLAM_RETURN_CODE} -eq 2 ]; then
#  exit 2
#fi
exit ${CLAM_RETURN_CODE}
