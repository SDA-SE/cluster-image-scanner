#!/usr/bin/env bats 

bats_require_minimum_version 1.5.0

load "${BATS_TEST_DIRNAME}/../images/base/scan-common.bash"

setup_file () {
    export FRESHCLAM_DATA_DIR=$(mktemp -d)
    FRESHCLAMCONF="${FRESHCLAM_DATA_DIR}/freshclam.conf"

    echo "DatabaseMirror db.de.clamav.net" > "$FRESHCLAMCONF"
    
    freshclam --config-file="$FRESHCLAMCONF" --datadir="$FRESHCLAM_DATA_DIR"
}

teardown_file () {
    rm -rf "$FRESHCLAM_DATA_DIR"
}

setup () {
    INFECTED_IMAGE_LOCATION=$(realpath "${BATS_TEST_DIRNAME}/infected-image.tar")
    INFECTED_IMAGE_HASH="066b4af1f7fb365d2475baadf4ec42446eff11a56a3c8f7f7e4bcb2e7b58b649"

    CLEAN_IMAGE_LOCATION=$(realpath "${BATS_TEST_DIRNAME}/clean-image.tar")
    CLEAN_IMAGE_HASH="995efde2e81b21d1ea7066aa77a59298a62a9e9fbb4b77f36c189774ec9b1089"

    TEST_ARTIFACTS_PATH=$(mktemp -d)
    MODULE_PATH=$(realpath "${BATS_TEST_DIRNAME}/../images/scan/malware")
    export RESOURCE_PATH=$(mktemp -d)

    MODULE_NAME="malware_scan"
    IS_SCAN="true"

    source () {
        return 0;
    }

    scan_result_pre () {
        return 0;
    }
    scan_result_post () {
        return 0;
    }

    clamscan () {
        command clamscan -d "$FRESHCLAM_DATA_DIR" "$@"
    }
}

teardown() {
    rm -rf "$TEST_ARTIFACTS_PATH"
    rm -rf "$RESOURCE_PATH"
}

@test "Scanning an infected image smaller than MAX_FILESIZE should return an error 1" {
    cd "$MODULE_PATH"
    run -1 builtin source module.bash \
        -i $INFECTED_IMAGE_HASH \
        -t $INFECTED_IMAGE_LOCATION \
        -a $TEST_ARTIFACTS_PATH \
        &>/dev/null
}

@test "Scanning a clean image smaller than MAX_FILESIZE should return 0" {
    cd "$MODULE_PATH"
    run -0 builtin source module.bash \
        -i $CLEAN_IMAGE_HASH \
        -t $CLEAN_IMAGE_LOCATION \
        -a $TEST_ARTIFACTS_PATH \
        &>/dev/null
}

@test "Scanning an infected image larger than MAX_FILESIZE should return 0" {
    cd "$MODULE_PATH"
    run -0 builtin source module.bash \
        -i $INFECTED_IMAGE_HASH \
        -t $INFECTED_IMAGE_LOCATION \
        -a $TEST_ARTIFACTS_PATH \
        -s 30000 \
        &>/dev/null
}

@test "Scanning a clean image larger than MAX_FILESIZE should return 0" {
    cd "$MODULE_PATH"
    run -0 builtin source module.bash \
        -i $CLEAN_IMAGE_HASH \
        -t $CLEAN_IMAGE_LOCATION \
        -a $TEST_ARTIFACTS_PATH \
        -s 10 \
        &>/dev/null
}
